			Assignment-1,Ardent,S.Prabha,7/06/2024(Fri)

Pattern Code with single variable and single loop:-

1)Pattern 1:
*
**
***
****
*****
Code(Pattern-1):
for i in range(1,6): #for 5 rows  
    print("*" * i) #in ith row print i number of stars


2)Pattern 2:
*****
****
***
**
*
Code(Pattern-2):
for i in range(5,0,-1): #range(starting index,Ending Index,Decrement by 1) 
    print("*" * i)  


3)Pattern 3:
    *
   **
  ***
 ****
*****
Code(Pattern-3):
for i in range(1,6): #for 5 rows
    print(" " * (5-i) + "*" * i) #space=(5-i) + i no of stars

4)Pattern 4:
*****
 ****
  ***
   **
    *
Code(Pattern-4):
for i in range(5,0,-1): #range(starting index,Ending Index,Decrement by 1)
    print(" " * (5-i) + "*" * i) #space=(5-i) + i no of stars


5)Pattern 5:
    *
   ***
  *****
 *******
********* 
Code(Pattern-5):
for i in range(1,6): #for 5 rows
    print(" " * (5-i) + "*" * (2*i-1)) #space=5-i + (2*i-1) no of stars

  
6)Pattern 6:
    *
   **
  ***
 ****
*****
 ****
  ***
   **
    *
Code(Pattern-6):
n = 5  #max stars in middle row
for i in range(1, 2*n):
    if i <= n:
        print(' ' * (n - i) + '*' * i) #upper triangle
    else:
        print(' ' * (i - n) + '*' * (2*n - i)) #lower triangle

 7)Pattern 7:
    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *  
Code(Pattern-7):
n = 5  # stars in middle row

for i in range(1, 2*n):
    if i <= n:
        print(' ' * (n - i) + '*' * (2 * i - 1)) #upper triangle,including middle row
    else:
        print(' ' * (i - n) + '*' * (2 * (2 * n - i) - 1)) #lower triangle


8)Pattern 8:		
**********	
****  ****
***    ***
**      **
*        *
**      **
***    ***
****  ****
**********
Code(Pattern-8):
Could Not do


9)Pattern 9:
    1
   12
  123
 1234
12345
Code(Pattern-9):
for i in range(1, 6):#for 5 rows
    numbers = '12345'[:i] #numbers to be printed
    print(' ' * (5 - i) + numbers)



10)Pattern 10:
    1
   121
  12321
 1234321
123454321
Code(Pattern-10):
n = 5  # Number of rows
for i in range(1, n + 1):
    line = ' ' * (n - i)  # Leading spaces
    line += ''.join(str(x) for x in range(1, i + 1))  # Increasing sequence
    line += ''.join(str(x) for x in range(i - 1, 0, -1))  # Decreasing sequence
    print(line)

11)Pattern 11:
    1
   212
  32123
 4321234
543212345
Code(Pattern-11):
n = 5  # Number of rows
for i in range(1, n + 1):
    line = ' ' * (n - i)  # Leading spaces
    
    # Generate the decreasing part of the sequence
    dec_seq = ''.join(str(x) for x in range(i, 0, -1))
    
    # Generate the increasing part of the sequence
    inc_seq = ''.join(str(x) for x in range(2, i + 1))
    
    # Combine the parts and print the row
    print(line + dec_seq + inc_seq)



12)Pattern 12:
1
1 2
1  3
1   4
12345
Code(Pattern-12):
n = 5  # Number of rows
for i in range(1, n + 1):
    if i < n:
        line = '1' + ' ' * (i - 1) + str(i) if i > 1 else '1'
    else:
        line = ''.join(str(x) for x in range(1, n + 1))
    
    print(line)



13)Pattern 13:
    1
   232
  34543
 4567654
567898765 
Code(Pattern-13):
n = 5  # Number of rows
for i in range(1, n + 1):
    line = ' ' * (n - i)  # Leading spaces
    # Generate the increasing part of the sequence
    line += ''.join(str(i + j) for j in range(i))
    # Generate the decreasing part of the sequence
    line += ''.join(str(i + j) for j in range(i - 2, -1, -1))
    # Print the row
    print(line)



